- if @campaign.errors.any?
  .alert.alert-error
    %h3= "#{pluralize(@campaign.errors.count, "error")} prohibited this campaign from being saved:"
    %ul
      - @campaign.errors.full_messages.each do |msg|
        %li= msg
      
.field
  = f.label :name
  = f.text_field :name

.field
  = f.label :short_description, "Short description (one sentence)"
  = f.text_field :short_description

.field
  = f.label :description
  = f.text_area :description, rows: 5

.field
  = f.label :purpose, "Why Play"
  = f.text_area :purpose, rows: 5

%br/

%h2 Campaign Rules

%h3 Actions
.fields_group
  .field.required_actions
    %p
      %em Which actions count toward this campaign?
      
    - @campaign.required_actions.each do |ra|
      = f.fields_for "required_actions_attributes[]", ra, index: ra.id do |builder|
        = render :partial => 'required_action_fields', :locals => {f: builder}
  
    = link_to_add_fields "add another", @campaign, f, :required_actions

  .field
    %p
      == #{f.check_box :all_actions_required} All actions required?
    %br/

  .field
    %p
      %em How many actions are required to complete the individual campaign?
    = f.text_field :required_individual_occurrences

  .field
    %p
      %em How many actions are required to complete the community campaign?
    = f.text_field :required_community_occurrences 

  .field
    %p
      %em How many actions per level?
    = f.text_field :actions_per_level 
  

%h3 Location
%p
  %em Set a minimum radius for actions &mdash; either from the weighted center of the user's actions (if latitude and longitude are left blank) or from a designated coordinate.
    
.fields_group
  .field
    = f.label :radius, "Radius (in miles - decimal or integer only)"
    = f.text_field :radius, placeholder: '1.3'
  .field
    = f.label :latitude
    = f.text_field :latitude
  .field
    = f.label :longitude
    = f.text_field :longitude
  
%h3 Duration
%p
  %em Define the time-frame during which the campaign will be active.

.fields_group
  .field
    = f.label :start_date
    = f.datetime_select(:start_time, order: [:month, :day, :year], start_year: Date.today.year)

  .field
    = f.label :end_date
    = f.datetime_select(:end_time, order: [:month, :day, :year], start_year: Date.today.year)

%h3 Badges

.fields_group
  .field
    = f.label :badge_icon
    - if @campaign.badge_icon.present?
      = image_tag @campaign.badge_icon.url(:badge)
    = f.file_field :badge_icon
  .field
    = f.label :individual_badge
    - if @campaign.individual_badge.present?
      = image_tag @campaign.individual_badge.url(:badge)
    = f.file_field :individual_badge
  .field
    = f.label :community_badge
    - if @campaign.community_badge.present?
      = image_tag @campaign.community_badge.url(:badge)
    = f.file_field :community_badge

.actions
  = f.submit 'Save', :class => 'btn btn-success'
  = link_to 'Cancel', admin_campaigns_path, :class => 'btn'